package solver;
    dialect "java"

// import org.optaplanner.core.api.score.buildin.simple.SimpleScoreHolder;
import org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder;
import basic.rueda.domain.*;
import org.kie.api.runtime.*;

import java.util.*;


global HardSoftScoreHolder scoreHolder;
global Integer counter;

// ############################################################################
// Hard constraints
// ############################################################################
rule "Initialize"
salience 100
when
then
       kcontext.getKieRuntime().setGlobal("counter", 1);
       System.out.println("Inicitlaize: " + counter );
end 

rule "Testing Comments"
when
    // # this is a single line comment
    // this is also a single line comment
    
then
    // this is a comment inside a semantic code block
    // # this is another comment in a semantic code block
    System.out.println("HELLO RULE ALWAYS");
end

rule "Person"
enabled false
when
    $p1 : Person(name in ("Edu", "Raul"))
then
    System.out.println("Person: " + $p1);
    Object k = kcontext.getKieRuntime().getGlobal("counter");
    // System.out.println("Object: " + k);
    Integer value = 5; // NO SE PUEDE AÃ‘ADIR VALOR??!!! value = k + 5;
    kcontext.getKieRuntime().setGlobal("counter", value);
    System.out.println("Counter: " + counter);
end

/* CONTRAINTS RULES */
/*
+==========+=========+=========+=========+=========+
|          | Person1 | Person2 | Person3 | Person4 |
+==========+=========+=========+=========+=========+
| Car1     |    X    |         |         |         |
+----------+---------+---------+---------+---------+
| Car2     |         |    X    |         |         |
+----------+---------+---------+---------+---------+
| Car3     |         |         |    X    |         |
+----------+---------+---------+---------+---------+
| Car4     |         |         |         |    X    |
+----------+---------+---------+---------+---------+
https://ozh.github.io/ascii-tables/
*/

rule "Horizontal conflict - A person cant be in a car if reached capacity of car"
enabled true
when
    // Si capacidad del coche es menor que 2 p.e, penaliza
    $c1: Car()
    SharedTrip($c1.capacity == 2)
//    s1: SharedTrip( $car: car == 2)
//    $p1: Person()
then
    System.out.println("------ HORIZONTAL CONFLICT ------" + $c1);
     scoreHolder.addHardConstraintMatch(kcontext, -1);
end

rule "Vertical conflict - A person cant be in two cars at the same time"
enabled true
when
    // No puede haber dos viajes con la misma persona
    SharedTrip($person1: driver, $car1: car)
    SharedTrip($person2: driver == $person1, $car1: car)

then

    System.out.println("------ VERTICAL CONFLICT ------");
        System.out.println("Misma persona " + $person1 + " en el mismo car" + $car1 + " \n");

     scoreHolder.addHardConstraintMatch(kcontext, -1);
end



